{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Generative AI Architecture Patterns","text":"<p>Table of Contents</p> <p>About this website</p>"},{"location":"#part-1-generative-ai-concepts","title":"Part 1: Generative AI Concepts","text":"<ol> <li>Large-language Models</li> <li>Chatbots</li> <li>Similarity and Embeddings</li> <li>Knowledge Graphs</li> <li>Concept Indexes</li> </ol>"},{"location":"#part-2-generative-ai-architecture-patterns","title":"Part 2: Generative AI Architecture Patterns","text":"<ol> <li>Prompt Enrichment</li> <li>Finetuning</li> <li>Agents</li> <li>Code Interpreter</li> <li>Knowledge Representation</li> </ol>"},{"location":"#end-matter","title":"End Matter","text":"<ol> <li>Glossary</li> <li>License</li> <li>Contributing</li> <li>References</li> <li>How We Built This Site</li> </ol>"},{"location":"about/","title":"About This Book","text":"<p>The art of building sustainable software is changing faster than ever before.  To build applications that can scale out to meet the demands of large organizations, we need to understand the architectural trade-offs of different approaches quickly.  These discussions need to be efficient.  The best way to increase the bandwidth of these discussions is to create a shared understanding of common architectural approaches.</p> <p>Referencing named patterns is one of the most essential tools to create shared understanding.  Using named patterns started in 1977 with the publication of Christopher Alexander's groundbreaking book A Pattern Language: Towns, Buildings, Construction.  Software architects adopted design patterns in the Gang-of-Four Design Pattern book in 1984.  In 2003, the Enterprise Integration Patterns book also applied design patterns to computer integration.</p> <p>Now, we are facing the most significant shift in application development for the last 20 years: the rise of generative AI.  To stay productive, we need a pattern language for generative AI to allow our architects to discuss the relative merits of different approaches.  This book attempts to codify many of the best practices in this rapidly changing field and give the reusable solution names that help increase the bandwidth of these discussions.</p> <p>Creating a new pattern language is a challenging task.  Generative AI applications are being built today with experts from different fields with distinct backgrounds.  Our goal is to take a holistic systems-thinking approach to GenAI Patterns and include input from various groups, including:</p> <ol> <li>Application Architects </li> <li>Data Scientists</li> <li>Natural Language Processing Experts</li> <li>Rule Engine Architects</li> <li>Security Architects</li> <li>Ethics Review Boards</li> </ol> <p>By sharing terminology, the architectural review processes will go smoother, resulting in better designs.</p> <p>Before we introduce you to the GenAI Patterns, we need to make sure everyone has a strong understanding of the key concepts that underpin Gen AI solutions.</p>"},{"location":"chat-gpt-response/","title":"ChatGPT Responses","text":"<p>Architecture design patterns are sets of names (labels) and problem description pairs.   Please generate a list of common architecture patterns used in the field of Generative AI.  </p> <p>Return the result in pure raw markdown format with header level 4 (####) for the pattern name and standard markdown content for the description.</p> <p>For each pattern list related patterns.</p>"},{"location":"chat-gpt-response/#autoencoder-based-generative-model","title":"Autoencoder-Based Generative Model","text":"<p>Autoencoders are a specific type of neural network architecture used for unsupervised learning. The primary objective is to encode the input data as internal fixed-size representations in reduced dimensionality and then to reconstruct the output from this representation.</p> <p>Related Patterns - Variational Autoencoders - Sparse Autoencoders - Denoising Autoencoders</p>"},{"location":"chat-gpt-response/#variational-autoencoders-vaes","title":"Variational Autoencoders (VAEs)","text":"<p>VAEs are a type of probabilistic generative model that are based on the Autoencoder architecture. They are used to generate new data that's similar to the training data, but VAEs are designed to be probabilistic, meaning that they provide a distribution over possible outputs.</p> <p>Related Patterns - Autoencoders - Conditional VAEs - Beta-VAEs</p>"},{"location":"chat-gpt-response/#generative-adversarial-networks-gans","title":"Generative Adversarial Networks (GANs)","text":"<p>GANs consist of two neural networks, namely the Generator and the Discriminator, which are trained simultaneously through a sort of contest. The Generator tries to produce fake data, while the Discriminator tries to distinguish fake from real data.</p> <p>Related Patterns - Conditional GANs - Wasserstein GANs - CycleGANs</p>"},{"location":"chat-gpt-response/#conditional-gans-cgans","title":"Conditional GANs (cGANs)","text":"<p>This architecture is an extension of the standard GAN, where both the generator and the discriminator are conditioned on some extra information (e.g., labels), thus enabling targeted data generation.</p> <p>Related Patterns - GANs - InfoGANs - Pix2Pix</p>"},{"location":"chat-gpt-response/#recurrent-neural-networks-rnns-for-generation","title":"Recurrent Neural Networks (RNNs) for Generation","text":"<p>In this pattern, RNNs are used for generating sequences of data. This is particularly useful for text, time-series, and music generation.</p> <p>Related Patterns - Long Short-Term Memory Networks (LSTM) - Gated Recurrent Units (GRU) - Sequence to Sequence Models</p>"},{"location":"chat-gpt-response/#transformer-based-generative-models","title":"Transformer-Based Generative Models","text":"<p>Transformers are particularly effective in handling sequences and have shown state-of-the-art performance in tasks like text, image, and even music generation.</p> <p>Related Patterns - GPT (Generative Pretrained Transformer) - BERT for Generation (though primarily a discriminative model) - Sequence to Sequence Models with Transformer architecture</p>"},{"location":"chat-gpt-response/#style-transfer-networks","title":"Style Transfer Networks","text":"<p>These networks are used to apply the artistic style of one image to the content of another image. This is done without altering the content but changing the style, thereby generating a new image that's a sort of 'fusion' of the two.</p> <p>Related Patterns - CycleGANs - Neural Style Transfer - Adaptive Instance Normalization (AdaIN)</p>"},{"location":"chat-gpt-response/#flow-based-generative-models","title":"Flow-Based Generative Models","text":"<p>These models provide an exact likelihood and tractable sampling by transforming a simple distribution into a complex one. They are often used in cases where exact likelihoods are necessary.</p> <p>Related Patterns - Normalizing Flows - RealNVP - Glow</p>"},{"location":"chat-gpt-response/#energy-based-generative-models","title":"Energy-Based Generative Models","text":"<p>These models define a scalar energy function to assign a value to each possible configuration of the input variables and aim to learn the parameters of these energy functions for generating data.</p> <p>Related Patterns - Boltzmann Machines - Restricted Boltzmann Machines (RBM) - Hopfield Networks</p>"},{"location":"contact/","title":"Contact","text":"<p>Dan McCreary</p>"},{"location":"contributing/","title":"Contributing","text":"<p>We would like to hear what architecture patterns you feel are important for generative AI.</p>"},{"location":"contributing/#contributing-a-new-generative-ai-pattern","title":"Contributing a New Generative AI Pattern","text":"<p>If you have found that you have found a pattern of consistently solving a business problem in a new way that we have not already described in our pattern library, please let us know!  Here is what you need to provide us:</p> <ol> <li>The pattern name.</li> <li>A description of when you would use that pattern.  This can include the type of problem you solve, how you solve it and why this pattern can be superior to other approaches.</li> <li>Any other related patterns.</li> <li>Other notes on how you picked the name of the pattern and the description.</li> </ol>"},{"location":"contributing/#how-to-contribute","title":"How to Contribute","text":"<p>Here are ways you can contribute:</p> <ol> <li>Submit a GitHub Pull Request</li> <li>Add an Issue to the GitHub repo</li> <li>Connect with Dan McCreary on LinkedIn.</li> </ol>"},{"location":"contributing/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>Your content must be original work, including all images.</p> <p>You may retain your own copywrite, but you agree to allow this community to reuse your content without fees under the following license:</p> <p>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)</p> <p>You are free to:</p> <ul> <li>Share \u2014 copy and redistribute the material in any medium or format</li> <li>Adapt \u2014 remix, transform, and build upon the material The licensor cannot revoke these freedoms as long as you follow the license terms.</li> </ul> <p>Under the following terms:</p> <p>Attribution** \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</p> <p>NonCommercial \u2014 You may not use the material for commercial purposes.</p> <p>ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.</p>"},{"location":"glossary/","title":"Generative AI Architecture Pattern Glossary","text":""},{"location":"glossary/#artificial-intelligence","title":"Artificial Intelligence","text":"<p>The simulation of human intelligence processes by computer systems.</p> <p>Artificial Intelligence (AI) encompasses the development of algorithms, models, and systems that enable machines to perform tasks that typically require human cognitive abilities, such as problem-solving, learning, reasoning, decision-making, understanding natural language, and recognizing patterns in data.</p> <p>AI techniques include machine learning, neural networks, natural language processing, and robotics. The goal of AI is to create intelligent agents that can mimic human-like thinking and behavior, leading to advancements in automation, data analysis, and various applications across industries.</p>"},{"location":"glossary/#agent","title":"Agent","text":"<p>A software agent refers to a self-contained and autonomous program or entity that is designed to perform specific tasks or make decisions on behalf of users or other software systems.</p> <p>Agents run with a degree of independence. They gather and analyze information from their environment, communicate with other agents or systems, adapt to changing conditions, and execute predefined actions or strategies. They are commonly used in various fields, including artificial intelligence, robotics, network management, and e-commerce, to automate complex tasks, enhance system efficiency, and enable proactive interactions between software components. Software agents range from simple scripts with rule-based behavior to sophisticated entities that employ machine learning and advanced algorithms to achieve their goals.</p> <ul> <li>Also known as: Software Agent</li> </ul>"},{"location":"glossary/#audit","title":"Audit","text":"<p>The process of auditing the use of agents within a generative AI-driven architecture.  Audit includes how much resources agents consume to achieve their goals including the use of CPU, memory, data use and the cost of calling APIs that have chargebacks.</p> <ul> <li>See also: Saftey</li> </ul>"},{"location":"glossary/#chatgpt","title":"ChatGPT","text":"<p>A product was released by OpenAI](http://openai.com) on November 30th, 2023.  ChatGPT is wildly credited as the program that raised awareness to the potential of generative AI applications.</p>"},{"location":"glossary/#concept-index","title":"Concept Index","text":"<p>An index that allows for fast comparison of any item to other similar items.</p> <p>Concept indexes are usually implemented using embeddings and vector databases.</p>"},{"location":"glossary/#generative-ai","title":"Generative AI","text":"<p>A category of artificial intelligence techniques and models that aim to create new and original data, such as images, text, audio, or other forms of content, by learning patterns from existing data.</p> <p>Unlike traditional AI systems that rely on explicit programming, generative AI employs neural networks to generate novel output that closely resembles the input data it was trained on. These models learn the underlying distribution of the training data and can then generate realistic and coherent content by sampling from this learned distribution.</p> <p>Generative AI finds applications in diverse fields such as art, content creation, data augmentation, and simulation, and it has led to innovations in generating human-like text, photorealistic images, music, and more.</p>"},{"location":"glossary/#knowledge-representation","title":"Knowledge Representation","text":"<p>The process of structuring and organizing information in a form that a computer or an AI system can easily understand, analyze and manipulate. </p> <p>It involves encoding real-world knowledge, facts, concepts, relationships, and rules into a format that allows for efficient reasoning, inference, and decision-making by AI algorithms. </p> <p>Knowledge representation methods vary from symbolic approaches, such as logic-based languages and semantic networks, to more recent techniques involving probabilistic graphical models and neural networks. Effective knowledge representation is crucial for enabling AI systems to store, retrieve, and utilize information effectively, facilitating tasks like natural language understanding, expert systems, reasoning, planning, and problem-solving.</p>"},{"location":"glossary/#langchain","title":"LangChain","text":"<p>An open source framework that puts large-language models (LLMs) and generative AI at the center of software development.</p> <p>LangChain lets software developers integrate LLMs other external components to develop applications.</p> <ul> <li>LangChain website</li> <li>LangChain Python Docs Introduction</li> </ul>"},{"location":"glossary/#language-model","title":"Language Model","text":"<ul> <li>also known as: Large-Language Model</li> </ul>"},{"location":"glossary/#machine-learning","title":"Machine Learning","text":"<p>A subset of artificial intelligence that focuses on the development of algorithms and models that enable computer systems to learn and improve from experience without being explicitly programmed. </p> <p>Machine Learning (ML) involves the construction of systems that can automatically recognize patterns, make predictions, and adapt their behavior based on data.</p> <p>ML algorithms utilize data to iteratively refine their performance over time. They are categorized into three main types: supervised learning, unsupervised learning, and reinforcement learning. </p> <p>In supervised learning, algorithms learn from labeled examples, making predictions or classifications based on provided input-output pairs. Unsupervised learning involves discovering patterns and structures within unlabeled data, often used for clustering or dimensionality reduction. Reinforcement learning centers on training algorithms to make sequential decisions to maximize rewards within a given environment.</p> <p>Key components of machine learning include feature extraction, model training, validation, and testing. Popular machine learning techniques include decision trees, neural networks, support vector machines, and more. Machine learning has applications in diverse fields, such as image recognition, natural language processing, recommendation systems, autonomous vehicles, and medical diagnosis, driving advancements in technology and automation.</p>"},{"location":"glossary/#non-parametric-model","title":"Non-Parametric Model","text":"<p>Algorithms that do not make strong assumptions about the form of the mapping function are called nonparametric machine learning algorithms.</p> <p>Non-parametric models are often use text retrieval-based systems such as search engines.  The input strings can vary in length and are not restricted to a fixed token count as we see in LLMs.</p> <ul> <li>Machine Learning Mastery</li> </ul>"},{"location":"glossary/#parametric-model","title":"Parametric Model","text":"<p>A learning model that summarizes data with a set of parameters of fixed size.</p> <p>For example a Deep Neural Network (DNN) takes is a parametric model that takes in a fixed number of input parameters.  No matter how much training data we provide a parametric model, it won\u2019t change how many parameters it needs to generate a sequence of tokens.</p> <p>Examples of parametric machine learning algorithms include: logistic regression and neural networks.</p> <p>See also: Non Parametric Models</p>"},{"location":"glossary/#safety-agents","title":"Safety (Agents)","text":"<p>The processes involved in ensuring that generative AI systems respond with appropriate content and without bias.</p> <p>Safety also involves making sure that generative systems don't return sensitive information such as PII or company policies that are considered sensitive or private.</p>"},{"location":"glossary/#security-agents","title":"Security (Agents)","text":"<p>Security in the context of software agents refers to the set of measures, protocols, and strategies designed to protect software agents and the systems they interact with from unauthorized access, data breaches, malicious attacks, and other potential threats. As autonomous entities that can operate independently, software agents can potentially become targets or vectors for various security risks. Ensuring the security of software agents involves multiple layers of protection:</p> <ol> <li> <p>Authentication and Authorization: Implementing mechanisms to verify the identity of agents and granting them appropriate access rights based on roles and permissions. This prevents unauthorized agents from gaining access to sensitive information or performing unauthorized actions.</p> </li> <li> <p>Encryption: Employing encryption techniques to secure communication between agents and external systems, ensuring that data exchanged between them remains confidential and tamper-proof.</p> </li> <li> <p>Integrity Verification: Employing methods to detect any unauthorized modifications or tampering with agent behavior, data, or communication. This helps maintain the reliability and trustworthiness of agents' actions.</p> </li> <li> <p>Vulnerability Management: Regularly assessing and addressing vulnerabilities within software agents and the underlying systems they interact with. This includes applying security patches and updates to prevent exploitation.</p> </li> <li> <p>Behavior Monitoring: Monitoring the behavior of software agents to detect any anomalies or deviations from expected patterns. This can help identify potentially malicious behavior.</p> </li> <li> <p>Access Control: Implementing controls to limit the actions and data that agents can access, ensuring that they only operate within predefined boundaries and don't compromise the overall security of the system.</p> </li> <li> <p>Audit and Logging: Keeping detailed records of agent activities and interactions for auditing and forensic purposes. This enables the tracing of actions and events, aiding in the investigation of security incidents.</p> </li> <li> <p>Intrusion Detection and Prevention: Employing systems that can detect and respond to unauthorized access attempts or malicious activities in real-time, preventing potential security breaches.</p> </li> </ol> <p>Security considerations for software agents are essential to maintain the integrity, availability, and confidentiality of data and systems while enabling the benefits of autonomous and intelligent agent-based systems.</p>"},{"location":"glossary/#similarity","title":"Similarity","text":""},{"location":"glossary/#seq2seq-model","title":"Seq2Seq Model","text":"<p>Any machine learning model that takes in a sequence of tokens and also returns a sequence of tokens.</p>"},{"location":"how-we-built-this-site/","title":"How We Built This Site","text":"<p>This website was created using mostly open-source tools.  We would like to acknowledge the work the developers did to contribute these tools to the community.</p> <ol> <li>GitHub - we use GitHub Pages to host this site and we use GitHub issues for tracking additions and change requests.</li> <li>Markdown - all the content in this site uses this format.  Markdown is now the defacto format for GitHub documentation and for documenting code including the content within our Jupyter Notebooks.</li> <li>Conda Conda is Python Virtual Environment that allows us to keep our Python libraries in sync for each of our development projects.  See our README.md file for specific site build instructions.</li> <li>mkdocs - a Python tool for converting Markdown into HTML.  Mkdocs allows us to test the web site on our local systems before we commit our changes to the central GitHub repository.</li> <li>material theme - We love the material UI look and feel as well as all the additions they have provided.</li> <li>Admonitions - We use the Material Admonitions addon to display notes and warnings</li> <li>Visual Studio Code - Integrated Development Environment that has strong code completion for Markdown and mkdocs and </li> <li>Grammarly VSCode Plugin - Grammer checking, spell checking etc.</li> <li>Google Analytics - we use the Mkdocs Material add on to add Google Analytics to all our pages.  This allows us to track what pages people are viewing the most and how long they stay on our site.</li> <li>ChatGPT 4 - We use ChatGPT for brainstorming, list generation, diagram generation and other tasks.</li> <li>p5.js - We use Processing version five in JavaScript to generate diagrams and simulations</li> </ol>"},{"location":"references/","title":"References for Generative AI Patterns","text":""},{"location":"references/#patterns-books","title":"Patterns Books","text":"<ol> <li> <p>A Timeless Way of Building by Christopher Alexander</p> </li> <li> <p>Design Patterns: Elements of Reusable Object-Oriented Software</p> </li> <li> <p>Patterns of Enterprise Application Architecture</p> </li> </ol>"},{"location":"references/#articles-on-vector-databases","title":"Articles on Vector Databases","text":"<ol> <li>How vector databases can revolutionize our relationship with generative AI</li> <li>Vector Databases and Their Importance in Generative AI: An Explained Guide</li> </ol>"},{"location":"references/#vector-databases","title":"Vector Databases","text":"<ol> <li>[Chroma]</li> <li>[Milvus]</li> <li>Qdrant</li> <li>Pinecone</li> <li>Weaviate Deep Lake. Qdrant. Elasticsearch. Vespa.</li> </ol>"},{"location":"references/#economic-impact-of-generative-ai","title":"Economic Impact of Generative AI","text":"<ul> <li>Generative AI could raise global GDP by 7% - Goldman Sachs - April 5th, 2032</li> </ul>"},{"location":"talks/","title":"Dan's Talks on Generative AI","text":""},{"location":"talks/#macc-2023","title":"MACC 2023","text":"<p>Title: Architecture Patterns for Generative AI</p> <p>Description: Generative AI is by far the most impactful technology in the last ten years.  It dominates the priority list of almost every CIO in the world.  This session will review key architectural patterns that organizations are using to safely harness the power of Generative AI to build intelligent search, chatbots, and agents and perform various tasks on unstructured text.  We will cover the emerging key use case taxonomies and the architectural patterns we need to support these initiatives.  If implemented, these patterns can accelerate the process of building intelligent agents for all knowledge workers.</p>"},{"location":"concepts/","title":"Generative AI Concepts","text":"<ol> <li>Large-language Models</li> <li>Chatbots</li> <li>Similarity and Embeddings</li> <li>Knowledge Graphs</li> <li>Concept Indexes</li> </ol>"},{"location":"concepts/chatbots/","title":"ChatBots","text":""},{"location":"concepts/concept-index/","title":"Concept Index","text":"<p>An index that allows you to quickly find similar items.</p> <p>Concept indexes can be added to any dataset as a additional property.</p>"},{"location":"concepts/concept-index/#related-concepts","title":"Related Concepts","text":"<ul> <li>Vector Database</li> </ul>"},{"location":"concepts/cosine-similarity/","title":"Cosine Similarity","text":""},{"location":"concepts/cosine-similarity/#cosine-similarity","title":"Cosine Similarity","text":"<p>A measure of similarity between two non-zero vectors.</p> <p>Cosine similarity is the cosine of the angle between the vectors; that is, it is the dot product of the vectors divided by the product of their lengths.</p> <p>Calculation of the cosine similarity between a given vector and a set of possibly billions of vectors can be a time-consuming problem that is easily accelerated by FPGA hardware.</p>"},{"location":"concepts/cosine-similarity/#related-concepts-and-patterns","title":"Related Concepts and Patterns","text":"<ul> <li>Embeddings</li> <li>Vector Database</li> <li>RAG</li> </ul>"},{"location":"concepts/cosine-similarity/#references","title":"References","text":"<ul> <li>Wikipedia Page on Cosine Similarity</li> <li>Xilinx FPGA Cosine Similarity</li> </ul>"},{"location":"concepts/embeddings/","title":"Similarity and Embeddings","text":"<p>Large-language models </p> <p>Embeddings for words Embeddings for things (person, place or things)</p> <p>similarity ability to integrate internal knowledge with public knowledge prompt enrichment</p>"},{"location":"concepts/knowledge-graph/","title":"Knowledge Graphs","text":""},{"location":"concepts/large-language-models/","title":"Large-Language Models","text":""},{"location":"concepts/vector-database/","title":"Vector Database","text":"<p>Any database that includes the ability to find similar items.</p> <p>Most vector databases use Embeddings to find similar items.</p>"},{"location":"concepts/vector-database/#related-patterns","title":"Related Patterns","text":"<p>RAG</p>"},{"location":"patterns/","title":"Generative AI Pattern Library","text":"<ol> <li>Prompt Enrichment</li> <li>Finetuning</li> <li>Agents</li> <li>Code Interpreter</li> <li>Knowledge Representation</li> </ol>"},{"location":"patterns/agents/","title":"Agent Architecture Pattern in Generative AI","text":"<p>The Agent architectural pattern is designed to incorporate autonomous decision-making capabilities within a generative model. An \"agent\" in this context is typically a software entity that can observe its environment, make decisions, and take actions to achieve certain goals. The architecture often couples generative models like GANs, VAEs, or RNNs with reinforcement learning or other decision-making algorithms.</p> <p>In this architecture, the agent is either embedded within the generative model or acts as an intermediary between the generative model and the external environment. The agent observes the state of the system, interprets this information, and then uses the generative model to produce outputs that are intended to achieve specific outcomes, based on predefined metrics or rewards.</p> <ul> <li>Related Patterns: </li> <li>Reinforcement Learning for Generation</li> <li>Multi-Agent Systems</li> <li>Decision Trees for Generation</li> </ul>"},{"location":"patterns/agents/#examples-in-business-applications","title":"Examples in Business Applications","text":"<ol> <li> <p>Automated Content Curation: An agent can autonomously generate and curate content based on real-time user behavior and feedback, improving engagement and user experience.</p> </li> <li> <p>Dynamic Pricing Strategies: In e-commerce, an agent could generate pricing strategies based on market conditions, stock levels, and consumer behavior, aiming to maximize profit or market share.</p> </li> <li> <p>Real-Time Risk Assessment: Financial institutions could use agents to generate real-time risk assessments based on a multitude of factors, enabling quick decision-making for loans or trades.</p> </li> <li> <p>Supply Chain Optimization: Businesses can use agents to dynamically generate supply chain strategies based on current demands, supply constraints, and logistical considerations.</p> </li> <li> <p>Customer Service Automation: An agent can generate personalized responses and solutions in real-time, improving customer service efficiency and satisfaction.</p> </li> <li> <p>Personalized Learning Environments: Educational platforms could employ agents to dynamically generate personalized curricula and learning resources based on a student's performance and preferences.</p> </li> </ol> <p>By understanding and effectively implementing the Agent architectural pattern, businesses can bring a new level of adaptability and intelligence to their generative AI applications.</p>"},{"location":"patterns/code-interpreter/","title":"Code Interpreter","text":"<p>The process of using a generative AI system to generate code, execute that code, and then compare the result to existing workflows.</p>"},{"location":"patterns/finetuning/","title":"Finetuning","text":"<p>Finetuning is the process of adding an additional layer of processing to the output of a large-language model to generate specific outcomes.</p> <p>Finetuning is an alternative to prompt enrichment.  The downside to finetuning is that each fine-tuned model must be hosted in a separate instance causing the cost of deployment to go up.</p>"},{"location":"patterns/knowledge-representation/","title":"Knowledge Representation Pattern in Generative AI","text":"<p>The Knowledge Representation architectural pattern focuses on incorporating structured knowledge into generative models to improve their ability to generate meaningful and contextually accurate data. Unlike traditional generative models that often rely solely on statistical patterns in the training data, models employing this pattern make use of external knowledge bases, ontologies, or predefined rules to guide the generation process.</p> <p>In this architecture, the generative model is integrated with a knowledge representation system. This could be a semantic graph, a set of logical rules, or any other structured form of data. The model uses this knowledge to inform its generation process, ensuring that the output aligns more closely with real-world semantics and constraints.</p> <ul> <li>Related Patterns:</li> <li>Graph Neural Networks for Generation</li> <li>Rule-Based Systems</li> <li>Memory Networks</li> </ul>"},{"location":"patterns/knowledge-representation/#examples-in-business-applications","title":"Examples in Business Applications","text":"<ol> <li> <p>Legal Document Generation: By incorporating knowledge about legal terminology and structure, businesses can automatically generate legal documents that are not only syntactically correct but also adhere to legal norms and standards.</p> </li> <li> <p>Medical Diagnostics: In healthcare, a model can generate diagnostic reports based on medical history and test results, guided by a knowledge base of medical best practices and terminology.</p> </li> <li> <p>Content Personalization: Media and e-commerce platforms can employ this pattern to generate personalized content or product recommendations that are not only similar to user preferences but also contextually relevant based on a user's past behavior and other factors.</p> </li> <li> <p>Natural Language Queries in Business Intelligence: Companies can use knowledge representation to generate responses to complex queries, ensuring that the generated insights are contextually accurate and meaningful.</p> </li> <li> <p>Automated Technical Support: Businesses can provide more accurate and contextually appropriate automated support by using a knowledge base to guide the generation of responses to technical queries.</p> </li> <li> <p>Data Harmonization in Mergers and Acquisitions: When two companies merge, their data often needs to be harmonized. A generative model with knowledge representation can assist in generating mappings between different data schemas, ensuring a smoother integration process.</p> </li> </ol> <p>By effectively implementing the Knowledge Representation architectural pattern, businesses can produce more accurate, meaningful, and contextually relevant generative outputs.</p>"},{"location":"patterns/prompt-enrichment/","title":"Prompt Enrichment","text":"<p>The process of adding additional text to a prompt based on the location of the prompt in concept space.</p>"},{"location":"patterns/prompt-enrichment/#related-concepts","title":"Related concepts","text":""},{"location":"patterns/prompt-enrichment/#rag","title":"RAG","text":""},{"location":"patterns/prompt-enrichment/#references","title":"References","text":""},{"location":"patterns/rag/","title":"Retrieval-Augmented Generation (RAG)","text":""},{"location":"patterns/rag/#description","title":"Description","text":"<p>A variation of Prompt Enrichment where a search engine is used to add additional knowledge to a prompt to increase response output.</p> <p>RAG is often used as a lower-cost method for including local knowledge with general knowledge.</p> <p>Many RAG designs focus on the use of a Vector Database to find text that is similar to a given prompt.</p> <p>RAG models where the parametric memory is a pre-trained seq2seq model and the non-parametric memory is a dense vector index of Wikipedia.</p>"},{"location":"patterns/rag/#references","title":"References","text":"<ol> <li> <p>Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks1 Patrick Lewis et. el - 12 Apr 2021</p> </li> <li> <p>KD Nuggets</p> </li> </ol>"},{"location":"patterns/similarity/","title":"Similarity Architecture Pattern in Generative AI","text":"<p>The Similarity architectural pattern focuses on finding or generating data that is \"similar\" to existing data samples based on some criteria or metrics. This approach is often used in recommendation systems, personalized content generation, and other applications where the goal is not to generate something entirely new but to find or create data closely resembling the existing ones.</p> <p>In this architecture, the generative model is trained on existing data and a similarity metric. The objective is to generate samples that minimize (or maximize) this similarity metric when compared to a given set of data. The architecture often involves a combination of other generative models like GANs, VAEs, or RNNs, along with a defined similarity or distance function like cosine similarity, Euclidean distance, or custom domain-specific metrics.</p> <ul> <li>Related Patterns: </li> <li>Content-Based Filtering</li> <li>k-NN (k-Nearest Neighbors) for Generation</li> <li>Metric Learning</li> <li>Concept Index</li> </ul>"},{"location":"patterns/similarity/#examples-in-business-applications","title":"Examples in Business Applications","text":"<ol> <li> <p>Personalized Marketing Content: Businesses can use the Similarity pattern to generate marketing material that is closely tailored to an individual customer's previous interactions or preferences, improving user engagement and ROI.</p> </li> <li> <p>Financial Fraud Detection: In the financial sector, this pattern can help in generating synthetic transactions that are similar to normal transactions. These can be used for testing fraud detection algorithms, making them more robust against evolving fraudulent tactics.</p> </li> <li> <p>Healthcare Personalization: In healthcare, treatment plans could be personalized based on the similarity between a new patient's medical history and those of previous patients who responded well to certain treatments.</p> </li> <li> <p>Retail and Recommendation Systems: Retailers can use this pattern to generate product bundles or recommendations that are similar to a customer's past purchases or viewed items, thereby increasing the chances of purchase.</p> </li> <li> <p>Automated Customer Support: Businesses can generate automated, yet personalized, responses to customer queries by creating responses that are similar to previously successful interactions.</p> </li> <li> <p>Content Generation for Media: Media companies can generate articles, video clips, or music that are similar to trending or popular content, thereby attracting a larger audience.</p> </li> </ol> <p>By understanding and effectively implementing the Similarity architectural pattern, businesses can provide more personalized and effective solutions across a range of applications.</p>"},{"location":"prompts/knowledge-graph/concept-dependency/","title":"Concept Dependency","text":""},{"location":"prompts/knowledge-graph/concept-dependency/#prompt","title":"Prompt","text":"<p>Great job!  Our next step is to create a fully connected dependency graph. In this step, for each concept on this list, please create a new list of other concepts on which it depends.  If a concept depends on a specific concept that is not listed, then we must add it as a new concept. This will help us determine the teaching order of the concepts.</p> <p>Return the new list as a CSV file using the following format:</p> <p>The first column is a numeric concept ID you assigned,  the second column is the concept name, and the third column is a pipe-delimited list of the concept IDs that the concept depends upon.</p> <p>Check your results to make sure that all concepts are connected to at least one other concept.</p>"},{"location":"prompts/knowledge-graph/concept-dependency/#response","title":"Response","text":"<p>ChatGPT Thought for 51 seconds</p> <p>ID,ConceptName,Dependencies 201,Mathematics, 1,Data,201 2,Information,1 3,Knowledge,2 4,Data Types,1 5,Data Structures,4 6,Data Storage,5 7,Data Processing,5 8,Data Collection,1 9,Data Input,8 10,Data Output,7 11,Data Flow,9|10 12,Data Lifecycle,8|6|7|10 13,Data Modeling,5 14,Data Analysis,7 15,Data Visualization,14 16,Database,5|6 17,Relational Databases,16 18,Non-relational Databases,16 19,Structured Data,1 20,Unstructured Data,1 21,Semi-structured Data,1 22,Data Warehouse,16 23,Data Mart,22 24,Data Lake,16 25,Data Integration,16|7 26,Data Migration,16|25 27,Data Transformation,7|25 28,Data Quality,1 29,Data Validation,28 30,Data Cleansing,28 31,Data Profiling,28 32,Data Governance,28 33,Data Management,32 34,Data Architecture,33 35,Enterprise Architecture,34 36,Metadata,1 37,Master Data,36 38,Transactional Data,1 39,Operational Data,1 40,Analytical Data,1 41,Data Security,1 42,Data Privacy,41 43,Data Compliance,41 44,Data Standards,33 45,Data Policies,33 46,Data Stewardship,33 47,Data Ownership,33 48,Data Lineage,36 49,Data Catalog,36 50,Data Discovery,49 51,Data Classification,36 52,Data Segmentation,51 53,Data Encryption,41 54,Data Masking,41 55,Data Anonymization,41 56,Data Retention,45 57,Data Disposal,56 58,Information Lifecycle Management,12|45 59,Data Strategy,33 60,Data Governance Frameworks,32 61,Data Governance Models,32 62,Data Stewardship Roles,46 63,Chief Data Officer,33 64,Data Literacy,33 65,Data Culture,33 66,Data-Driven Decision Making,14 67,Business Intelligence,14|16 68,Data Analytics,14 69,Big Data,1 70,Data Mining,68 71,Data Science,68 72,Data Engineering,33 73,Data Visualization Techniques,15 74,Data Interpretation,14 75,Predictive Analytics,68 76,Prescriptive Analytics,68 77,Descriptive Analytics,68 78,Diagnostic Analytics,68 79,Artificial Intelligence,71 80,Machine Learning,71 81,Deep Learning,80 82,Neural Networks,81 83,Natural Language Processing,80 84,Data Ethics,41 85,Data Bias,84 86,Data Quality Metrics,28 87,Data Harmonization,25 88,Data Enrichment,25 89,Data Standardization,44 90,Data Virtualization,25 91,Data Federation,25 92,Data Orchestration,25 93,Data Pipelines,25 94,Extract, Transform, Load Processes,25|27 95,Real-Time Data Processing,7 96,Batch Processing,7 97,Stream Processing,7 98,In-Memory Data Processing,7 99,Edge Computing,95 100,Internet of Things Data,99 101,Sensor Data,100 102,Cloud Computing,6 103,On-Premises Data Storage,6 104,Hybrid Cloud,102|103 105,Public Cloud,102 106,Private Cloud,102 107,Multi-Cloud Strategy,102 108,Software as a Service,102 109,Platform as a Service,102 110,Infrastructure as a Service,102 111,Data as a Service,102 112,Data Access,41 113,Application Programming Interfaces,112 114,Microservices Architecture,113 115,Service-Oriented Architecture,113 116,Enterprise Service Bus,115 117,Middleware,115 118,Data Lakes,24 119,Data Lakehouse,24|22 120,Data Swamps,24 121,Data Silos,25 122,Data Integration Tools,25 123,Data Replication,25 124,Data Synchronization,25 125,Data Indexing,16 126,Data Partitioning,16 127,Data Sharding,16 128,High Availability Systems,6 129,Disaster Recovery,128 130,Backup and Restore Procedures,128 131,Data Compression,6 132,Data Decompression,131 133,Data Security Protocols,41 134,Identity and Access Management,41 135,Role-Based Access Control,134 136,Authentication Mechanisms,134 137,Authorization Processes,134 138,Data Breach Response,41 139,Incident Management,138 140,Security Information and Event Management,138 141,Intrusion Detection Systems,138 142,Firewall Protection,138 143,Encryption Standards,53 144,Data Privacy Impact Assessment,42 145,Privacy by Design,42 146,Consent Management,42 147,Data Subject Rights,42 148,Data Loss Prevention,41 149,Data Protection Officer,42 150,Data Compliance Regulations,43 151,General Data Protection Regulation,150 152,Health Insurance Portability and Accountability Act,150 153,Data Auditing,43 154,Data Controls,43 155,Data Risk Management,43 156,Data Compliance Audits,153 157,Data Supply Chain,25 158,Data Ecosystem,33 159,Data Fabric,25 160,Data Mesh,25 161,Event-Driven Architecture,115 162,Data Monetization,33 163,Data Marketplace,162 164,Data Brokerage,163 165,Data Asset Valuation,162 166,Data Ownership Models,47 167,Data Licensing,47 168,Open Data Initiatives,33 169,Data Philanthropy,168 170,Data for Social Good,168 171,Data Legislation,150 172,Data Sovereignty,171 173,Data Localization,171 174,Data Governance Maturity Models,32 175,Data Quality Assessment,28 176,Data Governance Tools,32 177,Data Architecture Tools,34 178,Enterprise Data Modeling Tools,13 179,Data Management Platforms,33 180,Data Competency,33 181,Data Democratization,64 182,Data Literacy Programs,64 183,Data Competency Centers,180 184,Data Stewardship Committees,46 185,Data Ethics Committees,84 186,Data Culture Change Management,65 187,Data Literacy Training,64 188,Data Competency Frameworks,180 189,Data Strategy Development,59 190,Data Policy Development,45 191,Data Standard Development,44 192,Data Classification Schemes,51 193,Data Taxonomy,51 194,Data Ontology,51 195,Semantic Data Modeling,13 196,Conceptual Data Model,195 197,Logical Data Model,195 198,Physical Data Model,195 199,Entity-Relationship Modeling,195 200,Unified Modeling Language,195</p>"},{"location":"prompts/knowledge-graph/concept-enumeration/","title":"Concept Enumeration","text":""},{"location":"prompts/knowledge-graph/concept-enumeration/#prompt","title":"Prompt","text":"<p>``` I am helping teach an undergraduate course on enterprise data architecture at a local university. I would like to understand the key concepts that need to be presented in this course and the order in which they should be taught.</p> <p>Please create a list of the 200 most essential concepts in an undergraduate course on enterprise data architecture. For each concept, just return the concept name in a numbered list. Make sure that the concepts names are distinct and not synonyms.</p> <p>Start with the most basic foundational concepts and then proceed to the most complex concepts. Return just one concept per line. Avoid using acronyms or abbreviations.</p> <p>I am helping teach an undergraduate course on enterprise data architecture at a local university. I would like to understand the key concepts that need to be presented in this course and the order in which they should be taught. Please create a list of the 200 most essential concepts in an undergraduate course on enterprise data architecture. For each concept, return the concept preferred label in a numbered list. Make sure that the concept names are distinct and not synonyms. Start with the most basic foundational concepts and then proceed to the most complex concepts. Return just one concept label per line. Avoid using acronyms or abbreviations.</p> <p>ChatGPT o1-preview</p> <p>Thought for 24 seconds</p> <ol> <li>Data</li> <li>Information</li> <li>Knowledge</li> <li>Data Types</li> <li>Data Structures</li> <li>Data Storage</li> <li>Data Processing</li> <li>Data Collection</li> <li>Data Input</li> <li>Data Output</li> <li>Data Flow</li> <li>Data Lifecycle</li> <li>Data Modeling</li> <li>Data Analysis</li> <li>Data Visualization</li> <li>Database</li> <li>Relational Databases</li> <li>Non-relational Databases</li> <li>Structured Data</li> <li>Unstructured Data</li> <li>Semi-structured Data</li> <li>Data Warehouse</li> <li>Data Mart</li> <li>Data Lake</li> <li>Data Integration</li> <li>Data Migration</li> <li>Data Transformation</li> <li>Data Quality</li> <li>Data Validation</li> <li>Data Cleansing</li> <li>Data Profiling</li> <li>Data Governance</li> <li>Data Management</li> <li>Data Architecture</li> <li>Enterprise Architecture</li> <li>Metadata</li> <li>Master Data</li> <li>Transactional Data</li> <li>Operational Data</li> <li>Analytical Data</li> <li>Data Security</li> <li>Data Privacy</li> <li>Data Compliance</li> <li>Data Standards</li> <li>Data Policies</li> <li>Data Stewardship</li> <li>Data Ownership</li> <li>Data Lineage</li> <li>Data Catalog</li> <li>Data Discovery</li> <li>Data Classification</li> <li>Data Segmentation</li> <li>Data Encryption</li> <li>Data Masking</li> <li>Data Anonymization</li> <li>Data Retention</li> <li>Data Disposal</li> <li>Information Lifecycle Management</li> <li>Data Strategy</li> <li>Data Governance Frameworks</li> <li>Data Governance Models</li> <li>Data Stewardship Roles</li> <li>Chief Data Officer</li> <li>Data Literacy</li> <li>Data Culture</li> <li>Data-Driven Decision Making</li> <li>Business Intelligence</li> <li>Data Analytics</li> <li>Big Data</li> <li>Data Mining</li> <li>Data Science</li> <li>Data Engineering</li> <li>Data Visualization Techniques</li> <li>Data Interpretation</li> <li>Predictive Analytics</li> <li>Prescriptive Analytics</li> <li>Descriptive Analytics</li> <li>Diagnostic Analytics</li> <li>Artificial Intelligence</li> <li>Machine Learning</li> <li>Deep Learning</li> <li>Neural Networks</li> <li>Natural Language Processing</li> <li>Data Ethics</li> <li>Data Bias</li> <li>Data Quality Metrics</li> <li>Data Harmonization</li> <li>Data Enrichment</li> <li>Data Standardization</li> <li>Data Virtualization</li> <li>Data Federation</li> <li>Data Orchestration</li> <li>Data Pipelines</li> <li>Extract, Transform, Load Processes</li> <li>Real-Time Data Processing</li> <li>Batch Processing</li> <li>Stream Processing</li> <li>In-Memory Data Processing</li> <li>Edge Computing</li> <li>Internet of Things Data</li> <li>Sensor Data</li> <li>Cloud Computing</li> <li>On-Premises Data Storage</li> <li>Hybrid Cloud</li> <li>Public Cloud</li> <li>Private Cloud</li> <li>Multi-Cloud Strategy</li> <li>Software as a Service</li> <li>Platform as a Service</li> <li>Infrastructure as a Service</li> <li>Data as a Service</li> <li>Data Access</li> <li>Application Programming Interfaces</li> <li>Microservices Architecture</li> <li>Service-Oriented Architecture</li> <li>Enterprise Service Bus</li> <li>Middleware</li> <li>Data Lakes</li> <li>Data Lakehouse</li> <li>Data Swamps</li> <li>Data Silos</li> <li>Data Integration Tools</li> <li>Data Replication</li> <li>Data Synchronization</li> <li>Data Indexing</li> <li>Data Partitioning</li> <li>Data Sharding</li> <li>High Availability Systems</li> <li>Disaster Recovery</li> <li>Backup and Restore Procedures</li> <li>Data Compression</li> <li>Data Decompression</li> <li>Data Security Protocols</li> <li>Identity and Access Management</li> <li>Role-Based Access Control</li> <li>Authentication Mechanisms</li> <li>Authorization Processes</li> <li>Data Breach Response</li> <li>Incident Management</li> <li>Security Information and Event Management</li> <li>Intrusion Detection Systems</li> <li>Firewall Protection</li> <li>Encryption Standards</li> <li>Data Privacy Impact Assessment</li> <li>Privacy by Design</li> <li>Consent Management</li> <li>Data Subject Rights</li> <li>Data Loss Prevention</li> <li>Data Protection Officer</li> <li>Data Compliance Regulations</li> <li>General Data Protection Regulation</li> <li>Health Insurance Portability and Accountability Act</li> <li>Data Auditing</li> <li>Data Controls</li> <li>Data Risk Management</li> <li>Data Compliance Audits</li> <li>Data Supply Chain</li> <li>Data Ecosystem</li> <li>Data Fabric</li> <li>Data Mesh</li> <li>Event-Driven Architecture</li> <li>Data Monetization</li> <li>Data Marketplace</li> <li>Data Brokerage</li> <li>Data Asset Valuation</li> <li>Data Ownership Models</li> <li>Data Licensing</li> <li>Open Data Initiatives</li> <li>Data Philanthropy</li> <li>Data for Social Good</li> <li>Data Legislation</li> <li>Data Sovereignty</li> <li>Data Localization</li> <li>Data Governance Maturity Models</li> <li>Data Quality Assessment</li> <li>Data Governance Tools</li> <li>Data Architecture Tools</li> <li>Enterprise Data Modeling Tools</li> <li>Data Management Platforms</li> <li>Data Competency</li> <li>Data Democratization</li> <li>Data Literacy Programs</li> <li>Data Competency Centers</li> <li>Data Stewardship Committees</li> <li>Data Ethics Committees</li> <li>Data Culture Change Management</li> <li>Data Literacy Training</li> <li>Data Competency Frameworks</li> <li>Data Strategy Development</li> <li>Data Policy Development</li> <li>Data Standard Development</li> <li>Data Classification Schemes</li> <li>Data Taxonomy</li> <li>Data Ontology</li> <li>Semantic Data Modeling</li> <li>Conceptual Data Model</li> <li>Logical Data Model</li> <li>Physical Data Model</li> <li>Entity-Relationship Modeling</li> <li>Unified Modeling Language</li> </ol>"},{"location":"prompts/knowledge-graph/concept-taxonomy/","title":"Concept Taxonomy","text":""},{"location":"prompts/knowledge-graph/concept-taxonomy/#prompt","title":"Prompt","text":"<pre><code>Please suggest a taxonomy of about 10 classifiers\nor groups for these concepts\n</code></pre>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#response","title":"Response","text":"<p>Certainly! Creating a well-structured taxonomy will help organize the extensive list of concepts in your enterprise data architecture course. Below is a suggested taxonomy with 10 classifiers or groups, each accompanied by a brief description to provide clarity on what each group encompasses.</p>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#1-fundamental-concepts","title":"1. Fundamental Concepts","text":"<p>Description: Covers the basic building blocks of data architecture, including the foundational definitions and types of data. Includes Concepts Like:</p> <ul> <li>Data</li> <li>Information</li> <li>Knowledge</li> <li>Data Types</li> <li>Data Structures</li> </ul>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#2-data-modeling-and-architecture","title":"2. Data Modeling and Architecture","text":"<p>Description: Focuses on the frameworks and methodologies used to design and structure data within an organization. Includes Concepts Like:</p> <ul> <li>Data Modeling</li> <li>Conceptual Data Model</li> <li>Logical Data Model</li> <li>Physical Data Model</li> <li>Entity-Relationship Modeling</li> <li>Unified Modeling Language</li> <li>Semantic Data Modeling</li> <li>Data Ontology</li> <li>Data Taxonomy</li> </ul>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#3-data-storage-and-databases","title":"3. Data Storage and Databases","text":"<p>Description: Explores various data storage solutions and database systems, both relational and non-relational. Includes Concepts Like:</p> <ul> <li>Database</li> <li>Relational Databases</li> <li>Non-relational Databases</li> <li>Structured Data</li> <li>Unstructured Data</li> <li>Semi-structured Data</li> <li>Data Warehouse</li> <li>Data Mart</li> <li>Data Lake</li> <li>NoSQL Databases (Document Databases, Key-Value Stores, Column-Family Stores, Graph Databases)</li> </ul>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#4-data-processing-and-integration","title":"4. Data Processing and Integration","text":"<p>Description: Addresses the methods and tools used to process, transform, and integrate data from multiple sources. Includes Concepts Like:</p> <ul> <li>Data Processing</li> <li>Data Integration</li> <li>Data Migration</li> <li>Data Transformation</li> <li>Data Pipelines</li> <li>Extract, Transform, Load Processes</li> <li>Real-Time Data Processing</li> <li>Batch Processing</li> <li>Stream Processing</li> <li>Data Orchestration</li> <li>Data Federation</li> <li>Data Virtualization</li> </ul>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#5-data-quality-and-governance","title":"5. Data Quality and Governance","text":"<p>Description: Focuses on maintaining high data quality and establishing governance frameworks to manage data effectively. Includes Concepts Like:</p> <ul> <li>Data Quality</li> <li>Data Validation</li> <li>Data Cleansing</li> <li>Data Profiling</li> <li>Data Governance</li> <li>Data Management</li> <li>Data Standards</li> <li>Data Policies</li> <li>Data Stewardship</li> <li>Data Ownership</li> <li>Data Lineage</li> <li>Data Catalog</li> <li>Data Discovery</li> <li>Data Classification</li> <li>Data Segmentation</li> </ul>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#6-data-security-and-privacy","title":"6. Data Security and Privacy","text":"<p>Description: Covers the principles and practices to protect data integrity, confidentiality, and compliance with regulations. Includes Concepts Like:</p> <ul> <li>Data Security</li> <li>Data Privacy</li> <li>Data Compliance</li> <li>Data Encryption</li> <li>Data Masking</li> <li>Data Anonymization</li> <li>Identity and Access Management</li> <li>Role-Based Access Control</li> <li>Authentication Mechanisms</li> <li>Authorization Processes</li> <li>Data Breach Response</li> <li>Incident Management</li> <li>Firewall Protection</li> <li>Data Loss Prevention</li> </ul>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#7-data-analytics-and-business-intelligence","title":"7. Data Analytics and Business Intelligence","text":"<p>Description: Deals with the tools and techniques for analyzing data to support decision-making and derive business insights. Includes Concepts Like:</p> <ul> <li>Data Analysis</li> <li>Data Visualization</li> <li>Business Intelligence</li> <li>Data Mining</li> <li>Data Science</li> <li>Predictive Analytics</li> <li>Prescriptive Analytics</li> <li>Descriptive Analytics</li> <li>Diagnostic Analytics</li> <li>Data Interpretation</li> <li>Data Visualization Techniques</li> </ul>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#8-big-data-and-nosql","title":"8. Big Data and NoSQL","text":"<p>Description: Explores large-scale data management and the use of NoSQL databases to handle diverse and high-volume data. Includes Concepts Like:</p> <ul> <li>Big Data</li> <li>NoSQL Databases</li> <li>CAP Theorem</li> <li>Eventual Consistency</li> <li>BASE Properties</li> <li>Sharding</li> <li>Replication in NoSQL</li> <li>NoSQL Query Languages</li> <li>Indexing in NoSQL</li> <li>NoSQL Data Models</li> <li>Polyglot Persistence</li> <li>NoSQL Scalability</li> <li>NoSQL Use Cases</li> <li>Consistency Models</li> <li>Data Partitioning in NoSQL</li> <li>NoSQL Performance Optimization</li> <li>NoSQL vs Relational Databases</li> <li>NoSQL Security Practices</li> </ul>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#9-data-management-technologies-and-tools","title":"9. Data Management Technologies and Tools","text":"<p>Description: Focuses on the software and tools that facilitate various aspects of data architecture and management. Includes Concepts Like:</p> <ul> <li>Data Catalog</li> <li>Data Discovery</li> <li>Data Classification Schemes</li> <li>Data Indexing</li> <li>Data Partitioning</li> <li>Data Replication</li> <li>Data Virtualization</li> <li>Data Orchestration</li> <li>Middleware</li> <li>Application Programming Interfaces</li> <li>Microservices Architecture</li> <li>Service-Oriented Architecture</li> <li>Enterprise Service Bus</li> <li>Data Integration Tools</li> <li>Data Management Platforms</li> <li>Data Architecture Tools</li> <li>Enterprise Data Modeling Tools</li> <li>Data Governance Tools</li> </ul>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#10-data-strategy-and-organizational-aspects","title":"10. Data Strategy and Organizational Aspects","text":"<p>Description: Addresses the strategic and organizational elements necessary for effective data management and utilization. Includes Concepts Like:</p> <ul> <li>Data Strategy</li> <li>Data Governance Frameworks</li> <li>Data Governance Models</li> <li>Chief Data Officer</li> <li>Data Literacy</li> <li>Data Culture</li> <li>Data-Driven Decision Making</li> <li>Data Competency</li> <li>Data Democratization</li> <li>Data Literacy Programs</li> <li>Data Competency Centers</li> <li>Data Stewardship Committees</li> <li>Data Ethics Committees</li> <li>Data Culture Change Management</li> <li>Data Literacy Training</li> <li>Data Competency Frameworks</li> <li>Data Strategy Development</li> <li>Data Policy Development</li> <li>Data Standard Development</li> <li>Data Supply Chain</li> <li>Data Ecosystem</li> <li>Data Fabric</li> <li>Data Mesh</li> <li>Data Monetization</li> <li>Data Marketplace</li> <li>Data Brokerage</li> <li>Data Asset Valuation</li> <li>Data Ownership Models</li> <li>Data Licensing</li> <li>Open Data Initiatives</li> <li>Data Philanthropy</li> <li>Data for Social Good</li> <li>Data Legislation</li> <li>Data Sovereignty</li> <li>Data Localization</li> <li>Data Governance Maturity Models</li> <li>Data Risk Management</li> <li>Data Compliance Audits</li> <li>Data Compliance Regulations</li> <li>General Data Protection Regulation</li> <li>Health Insurance Portability and Accountability Act</li> </ul>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#taxonomy-overview","title":"Taxonomy Overview","text":"Classifier Description 1. Fundamental Concepts Basic definitions and types of data, foundational knowledge required for understanding more complex topics. --- --- 2. Data Modeling and Architecture Frameworks and methodologies for designing and structuring data within an organization. 3. Data Storage and Databases Various data storage solutions and database systems, including both relational and non-relational databases. 4. Data Processing and Integration Methods and tools for processing, transforming, and integrating data from multiple sources. 5. Data Quality and Governance Ensuring data integrity and establishing governance frameworks for effective data management. 6. Data Security and Privacy Protecting data integrity and confidentiality, and ensuring compliance with relevant regulations. 7. Data Analytics and Business Intelligence Tools and techniques for analyzing data to support decision-making and derive business insights. 8. Big Data and NoSQL Managing large-scale data and utilizing NoSQL databases to handle diverse and high-volume data. 9. Data Management Technologies and Tools Software and tools that facilitate various aspects of data architecture and management. 10. Data Strategy and Organizational Aspects Strategic and organizational elements necessary for effective data management and utilization."},{"location":"prompts/knowledge-graph/concept-taxonomy/#benefits-of-this-taxonomy","title":"Benefits of This Taxonomy:","text":"<ol> <li>Structured Learning Path: Organizing concepts into these classifiers allows for a logical progression from fundamental to advanced topics.</li> <li>Comprehensive Coverage: Ensures all essential areas of enterprise data architecture are addressed.</li> <li>Ease of Navigation: Facilitates both teaching and learning by grouping related concepts together.</li> <li>Flexibility: Allows for adjustments based on course focus or specific institutional requirements.</li> </ol>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#implementation-tips","title":"Implementation Tips:","text":"<ul> <li>Sequential Teaching: Start with Fundamental Concepts and gradually move towards more specialized areas like Big Data and NoSQL and Data Strategy and Organizational Aspects.</li> <li>Integrated Projects: Design assignments or projects that span multiple classifiers to provide holistic understanding.</li> <li>Interconnected Learning: Highlight dependencies between classifiers, such as how Data Quality and Governance underpin effective Data Analytics and Business Intelligence.</li> </ul> <p>This taxonomy should provide a solid framework for organizing your course content, ensuring that students build a comprehensive and interconnected understanding of enterprise data architecture.</p>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#notes-on-classification","title":"Notes on Classification:","text":"<ul> <li>Fundamental Concepts (1): Basic definitions and types of data.</li> <li>Data Modeling and Architecture (2): Frameworks and methodologies for designing and structuring data.</li> <li>Data Storage and Databases (3): Various data storage solutions and database systems.</li> <li>Data Processing and Integration (4): Methods and tools for processing, transforming, and integrating data.</li> <li>Data Quality and Governance (5): Ensuring data integrity and establishing governance frameworks.</li> <li>Data Security and Privacy (6): Protecting data integrity, confidentiality, and compliance.</li> <li>Data Analytics and Business Intelligence (7): Tools and techniques for analyzing data and deriving business insights.</li> <li>Big Data and NoSQL (8): Managing large-scale data and utilizing NoSQL databases.</li> <li>Data Management Technologies and Tools (9): Software and tools facilitating data architecture and management.</li> <li>Data Strategy and Organizational Aspects (10): Strategic and organizational elements for effective data management.</li> </ul>"},{"location":"prompts/knowledge-graph/concept-taxonomy/#implementation-recommendations","title":"Implementation Recommendations:","text":"<ol> <li>Sequential Teaching: Begin with Fundamental Concepts and progressively move through the classifiers to build a solid foundation before tackling more complex topics.</li> <li>Integrated Projects: Design assignments that span multiple classifiers to encourage holistic understanding.</li> <li>Emphasize Dependencies: Highlight how foundational concepts underpin advanced topics, ensuring students grasp the interconnectedness of the material.</li> <li>Utilize Classifier Groups: Organize lectures, readings, and assessments around these classifiers to maintain structured and coherent course progression.</li> </ol> <p>This structured approach will facilitate a comprehensive and interconnected understanding of enterprise data architecture for your students.</p>"},{"location":"quizes/01-concepts/","title":"Generative AI Patterns Quiz 1","text":""},{"location":"quizes/01-concepts/#1-what-are-large-language-models-primarily-used-for","title":"1. What are large-language models primarily used for?","text":"<p>a. Image recognition b. Sound analysis c. Text generation and understanding [CORRECT] d. Video processing</p>"},{"location":"quizes/01-concepts/#2-in-the-context-of-language-models-what-does-tokenization-refer-to","title":"2. In the context of language models, what does \"tokenization\" refer to?","text":"<p>a. The process of converting text into numerical values b. The process of breaking down text into smaller units like words or subwords [CORRECT] c. The process of encrypting text data d. The process of counting the number of words in a document</p>"},{"location":"quizes/01-concepts/#3-what-are-prompts-typically-used-for-in-generative-models","title":"3. What are prompts typically used for in generative models?","text":"<p>a. Debugging the model b. Providing an initial input to guide the model's output [CORRECT] c. Enhancing the model's speed d. Reducing the model's size</p>"},{"location":"quizes/01-concepts/#4-embeddings-in-the-context-of-language-models-refer-to","title":"4. Embeddings in the context of language models refer to:","text":"<p>a. Embedding videos in text b. High-dimensional vectors representing words or tokens [CORRECT] c. The process of embedding links in a document d. The method of including images within text</p>"},{"location":"quizes/01-concepts/#5-what-is-cosine-similarity-used-for-in-the-context-of-embeddings","title":"5. What is cosine similarity used for in the context of embeddings?","text":"<p>a. Calculating the angle between two vectors b. Measuring the similarity between two vectors [CORRECT] c. Calculating the cross product of two vectors d. Determining the length of a vector</p>"},{"location":"quizes/01-concepts/#6-what-does-fine-tuning-a-model-refer-to","title":"6. What does \"fine-tuning\" a model refer to?","text":"<p>a. Making minor adjustments to a pretrained model using specific data [CORRECT] b. Training a model from scratch c. Adjusting the hyperparameters of a model during the initial training phase d. Reducing the size of a model for deployment</p>"},{"location":"quizes/01-concepts/#7-what-is-a-foundation-model","title":"7. What is a foundation model?","text":"<p>a. A model that is the basis for constructing buildings b. A preliminary model used in the early stages of research c. A large pretrained model that serves as a starting point for various tasks [CORRECT] d. A model used exclusively for foundational mathematics</p>"},{"location":"quizes/01-concepts/#8-langchain-in-the-ai-context-refers-to","title":"8. \"Langchain\" in the AI context refers to:","text":"<p>a. A blockchain for languages b. A chain of words in a sentence c. A technique used to combine multiple language models [CORRECT] d. A new programming language for AI</p>"},{"location":"quizes/01-concepts/#9-which-programming-language-is-most-commonly-associated-with-ai-and-machine-learning-development","title":"9. Which programming language is most commonly associated with AI and machine learning development?","text":"<p>a. JavaScript b. C++ c. Python [CORRECT] d. Ruby</p>"},{"location":"quizes/01-concepts/#10-prompt-engineering-in-the-context-of-generative-ai-is","title":"10. Prompt engineering in the context of generative AI is:","text":"<p>a. The process of designing new programming languages for AI b. The act of constructing physical devices for AI c. The technique of crafting prompts to achieve desired outputs from models [CORRECT] d. The engineering of new algorithms for tokenization</p>"},{"location":"sims/graph/","title":"Enterprise Data Architecture Concept Dependency Graph","text":"<p>HTML Page for Dependency Graph</p>"},{"location":"sims/graph/#adjusting-visualization","title":"Adjusting Visualization","text":"<p>In the JavaScript file you can change the display options. Here is the portion of the JavaScript that changes the options.</p> <pre><code>var options = {\n    nodes: {\n        shape: 'dot',\n        size: 10,\n        font: {\n            size: 14,\n        },\n    },\n    edges: {\n        arrows: 'to',\n        smooth: true,\n    },\n    physics: {\n        stabilization: false,\n    },\n};\n</code></pre>"},{"location":"sims/graph/#left-to-right-layout","title":"Left to Right Layout","text":"<p>HTML Page for Dependency Graph</p> <pre><code>var options = {\nlayout: {\n        hierarchical: {\n          direction: 'LR',  // Left to right\n          sortMethod: 'directed',  // Sort nodes based on dependencies\n          nodeSpacing: 200,  // Adjust spacing if needed\n          levelSeparation: 150  // Adjust for horizontal space between levels\n        }\n      }\n}\n</code></pre>"},{"location":"sims/graph/#full-layout-options","title":"Full Layout Options","text":"<pre><code>layout: {\n    randomSeed: undefined,\n    improvedLayout:true,\n    clusterThreshold: 150,\n    hierarchical: {\n      enabled:false,\n      levelSeparation: 150,\n      nodeSpacing: 100,\n      treeSpacing: 200,\n      blockShifting: true,\n      edgeMinimization: true,\n      parentCentralization: true,\n      direction: 'LR',        // UD, DU, LR, RL\n      sortMethod: 'hubsize',  // hubsize, directed\n      shakeTowards: 'leaves'  // roots, leaves\n    }\n  }\n  ```\n\n## Hierarchical Layout User Defined\nhttps://visjs.github.io/vis-network/examples/network/layout/hierarchicalLayoutUserdefined.html\n\n```js\n  var options = {\n          edges: {\n            smooth: {\n              type: \"cubicBezier\",\n              forceDirection:\n                directionInput.value == \"UD\" || directionInput.value == \"DU\"\n                  ? \"vertical\"\n                  : \"horizontal\",\n              roundness: 0.4,\n            },\n          },\n          layout: {\n            hierarchical: {\n              direction: directionInput.value,\n            },\n          },\n          physics: false,\n        };\n</code></pre>"},{"location":"sims/graph/#category-colors","title":"Category Colors","text":"<p>We can use generative AI to categorize each concept. Here are 11 categories of the concepts</p> CategoryID Color CategoryLabel 1 red Fundamental Concepts 2 orange Passive Components 3 yellow Active Components and Semiconductor Devices 4 green Circuit Analysis Techniques 5 cyan AC Circuit Concepts 6 blue Transient Analysis 7 purple Signal Processing and Filters 8 pink Amplifiers and Analog Circuits 9 gray Power Electronics 10 olive Control Systems and Stability 11 brown Types of Circuits <p>Category Colors Demo</p>"},{"location":"sims/graph/#reference","title":"Reference","text":"<p>Vis.js Network Layout Methods</p>"}]}